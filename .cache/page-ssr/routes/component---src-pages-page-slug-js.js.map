{"version":3,"file":"component---src-pages-page-slug-js.js","mappings":"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","sources":["webpack://gatsby-starter-contentful-homepage/./src/components/ui.css.ts","webpack://gatsby-starter-contentful-homepage/./src/styles.css.ts","webpack://gatsby-starter-contentful-homepage/./node_modules/camelcase/index.js","webpack://gatsby-starter-contentful-homepage/../src/image-utils.ts","webpack://gatsby-starter-contentful-homepage/../src/components/hooks.ts","webpack://gatsby-starter-contentful-homepage/../src/components/placeholder.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/picture.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/main-image.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-contentful-homepage/../src/components/static-image.server.tsx","webpack://gatsby-starter-contentful-homepage/./src/components/head.js","webpack://gatsby-starter-contentful-homepage/./src/components/layout.js","webpack://gatsby-starter-contentful-homepage/./src/components/ui.js","webpack://gatsby-starter-contentful-homepage/./src/pages/{Page.slug}.js","webpack://gatsby-starter-contentful-homepage/./node_modules/is-absolute-url/index.js"],"sourcesContent":["import \"src/theme.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE42VO2/bMBSF9/wKIlmtgHrYlpSpBZK0QyYPHQNKomwmkuhSlO2k6H/vpWy+ZAWolwQ4H+89l4+jXHAu0Z8bhIKg5A0XfVCQ8n0r+NBVr6/H4Thke5yju7quH76iLlgI2CPOMow9UtKT1EgEyGr8echesJaID03FM/36oVAU1Uwy36wdJDW+l8AkBVlS4jGklOxgCq0AwjiJ0rU/XwMDamY9Mn6ngna0Zmay9Oz5Yrrfk5IGWItZjgLsKqFWSI6S/cmVIi0VOUp9KdZSmaNw5WuJ1qocxZGvLbVGc7SatFtprYaa0aSh9bmFCSYrrdMdiNOVxisDcWrWun0DdWrX+n0HdWrYOm5UZWu55p3csE/a231v1UzXupmqy9HcejMYd/fZ6ma2Pegz6810v6F+cq2b+YR7VlY3E/ZwO2bqr7Uu3fNU+i/KtjvZBx0XLWk0NgCmb69LtbRiQ6upQ46Wc1RPW1bwxryq4xfVXOaUo/UcA1EgiAt+wCV3QT8uPnN0+wx0S7rbBepJp9wIVrv8jpKKdVsTQvg/1rS842YBxNaFX6AX2jV8gZQ+3rbzooZ19MdlAtdeCHEW3q+W19TUVKzAaAaU6o/BEoWF11TPG2a2LIRY0wyVkooNOIVm01MPIdnwLOc3XatwuscRbWfhI6tMVoaQcoCmGu3H61jCnhJwKwyWjVmCzcMdsY4IwY+GgeQLsX0dZ8ZrBgEYJsmkiu8dgjC1L+RMkAORxHqp3DeknRye4dO1/85PL6wzJKRjjK9MW5ScDAphmcygP2ErDLP1gthFNnBK9ph2qq3mBNwbFhSDlE4lprbKJxoitnan3tycOQMlE2VjCUjSTP2Mnx2p+LGf1IFEhT7qi6Q+PeP/d9FjlMUx/rYwkmrlamFy1lJPS9bxU/IUZQ83f/8B/ZTjGmUIAAA=\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/ui.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/ui.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var avatar = 'ui_avatar__ur0mb5i';\nexport var backgrounds = {primary:'ui_backgrounds_primary__ur0mb5f',muted:'ui_backgrounds_muted__ur0mb5g'};\nexport var blockLink = 'ui_blockLink__ur0mb58';\nexport var blockquote = 'ui_blockquote__ur0mb5h';\nexport var box = {center:'ui_box_center__ur0mb2o'};\nexport var buttons = {primary:'ui_buttons_primary__ur0mb5a ui_button__ur0mb59',subprime:'ui_buttons_subprime__ur0mb5b ui_button__ur0mb59',reversed:'ui_buttons_reversed__ur0mb5c ui_button__ur0mb59',link:'ui_buttons_link__ur0mb5d ui_button__ur0mb59',linkReversed:'ui_buttons_linkReversed__ur0mb5e ui_button__ur0mb59'};\nexport var container = 'ui_container__ur0mb0';\nexport var containers = {normal:'ui_container__ur0mb0',wide:'ui_containers_wide__ur0mb2 ui_container__ur0mb0',narrow:'ui_containers_narrow__ur0mb3 ui_container__ur0mb0',tight:'ui_containers_tight__ur0mb4 ui_container__ur0mb0',fullbleed:'ui_containers_fullbleed__ur0mb5 ui_container__ur0mb0'};\nexport var ctaLink = 'ui_ctaLink__ur0mb57';\nexport var debug = 'ui_debug__ur0mb5r';\nexport var flex = 'ui_flex__ur0mb6';\nexport var flexGap = {'0':'ui_flexGap_0__ur0mbh','1':'ui_flexGap_1__ur0mbi','2':'ui_flexGap_2__ur0mbj','3':'ui_flexGap_3__ur0mbk','4':'ui_flexGap_4__ur0mbl','5':'ui_flexGap_5__ur0mbm','6':'ui_flexGap_6__ur0mbn','-1':'ui_flexGap_-1__ur0mbo','-2':'ui_flexGap_-2__ur0mbp','-3':'ui_flexGap_-3__ur0mbq','-4':'ui_flexGap_-4__ur0mbr','-5':'ui_flexGap_-5__ur0mbs','-6':'ui_flexGap_-6__ur0mbt'};\nexport var flexVariants = {wrap:'ui_flexVariants_wrap__ur0mb7',start:'ui_flexVariants_start__ur0mb8',baseline:'ui_flexVariants_baseline__ur0mb9',columnStart:'ui_flexVariants_columnStart__ur0mba',column:'ui_flexVariants_column__ur0mbb',end:'ui_flexVariants_end__ur0mbc',stretch:'ui_flexVariants_stretch__ur0mbd',spaceBetween:'ui_flexVariants_spaceBetween__ur0mbe',center:'ui_flexVariants_center__ur0mbf',responsive:'ui_flexVariants_responsive__ur0mbg'};\nexport var gutter = {'0':'ui_gutter_0__ur0mb24','1':'ui_gutter_1__ur0mb25','2':'ui_gutter_2__ur0mb26','3':'ui_gutter_3__ur0mb27','4':'ui_gutter_4__ur0mb28','5':'ui_gutter_5__ur0mb29','6':'ui_gutter_6__ur0mb2a','-1':'ui_gutter_-1__ur0mb2b','-2':'ui_gutter_-2__ur0mb2c','-3':'ui_gutter_-3__ur0mb2d','-4':'ui_gutter_-4__ur0mb2e','-5':'ui_gutter_-5__ur0mb2f','-6':'ui_gutter_-6__ur0mb2g'};\nexport var iconLink = 'ui_iconLink__ur0mb5o';\nexport var icons = {small:'ui_icons_small__ur0mb5l',medium:'ui_icons_medium__ur0mb5m',large:'ui_icons_large__ur0mb5n'};\nexport var interactiveIcon = 'ui_interactiveIcon__ur0mb5p';\nexport var link = 'ui_link__ur0mb54';\nexport var list = 'ui_list__ur0mb10';\nexport var logos = {small:'ui_logos_small__ur0mb5j',medium:'ui_logos_medium__ur0mb5k'};\nexport var margin = {'0':'ui_margin_0__ur0mb2q','1':'ui_margin_1__ur0mb2r','2':'ui_margin_2__ur0mb2s','3':'ui_margin_3__ur0mb2t','4':'ui_margin_4__ur0mb2u','5':'ui_margin_5__ur0mb2v','6':'ui_margin_6__ur0mb2w','-1':'ui_margin_-1__ur0mb2x','-2':'ui_margin_-2__ur0mb2y','-3':'ui_margin_-3__ur0mb2z','-4':'ui_margin_-4__ur0mb30','-5':'ui_margin_-5__ur0mb31','-6':'ui_margin_-6__ur0mb32',auto:'ui_margin_auto__ur0mb33'};\nexport var margin0 = 'ui_margin0__ur0mb4o';\nexport var marginBottom = {'0':'ui_marginBottom_0__ur0mb4a','1':'ui_marginBottom_1__ur0mb4b','2':'ui_marginBottom_2__ur0mb4c','3':'ui_marginBottom_3__ur0mb4d','4':'ui_marginBottom_4__ur0mb4e','5':'ui_marginBottom_5__ur0mb4f','6':'ui_marginBottom_6__ur0mb4g','-1':'ui_marginBottom_-1__ur0mb4h','-2':'ui_marginBottom_-2__ur0mb4i','-3':'ui_marginBottom_-3__ur0mb4j','-4':'ui_marginBottom_-4__ur0mb4k','-5':'ui_marginBottom_-5__ur0mb4l','-6':'ui_marginBottom_-6__ur0mb4m',auto:'ui_marginBottom_auto__ur0mb4n'};\nexport var marginLeft = {'0':'ui_marginLeft_0__ur0mb34','1':'ui_marginLeft_1__ur0mb35','2':'ui_marginLeft_2__ur0mb36','3':'ui_marginLeft_3__ur0mb37','4':'ui_marginLeft_4__ur0mb38','5':'ui_marginLeft_5__ur0mb39','6':'ui_marginLeft_6__ur0mb3a','-1':'ui_marginLeft_-1__ur0mb3b','-2':'ui_marginLeft_-2__ur0mb3c','-3':'ui_marginLeft_-3__ur0mb3d','-4':'ui_marginLeft_-4__ur0mb3e','-5':'ui_marginLeft_-5__ur0mb3f','-6':'ui_marginLeft_-6__ur0mb3g',auto:'ui_marginLeft_auto__ur0mb3h'};\nexport var marginRight = {'0':'ui_marginRight_0__ur0mb3i','1':'ui_marginRight_1__ur0mb3j','2':'ui_marginRight_2__ur0mb3k','3':'ui_marginRight_3__ur0mb3l','4':'ui_marginRight_4__ur0mb3m','5':'ui_marginRight_5__ur0mb3n','6':'ui_marginRight_6__ur0mb3o','-1':'ui_marginRight_-1__ur0mb3p','-2':'ui_marginRight_-2__ur0mb3q','-3':'ui_marginRight_-3__ur0mb3r','-4':'ui_marginRight_-4__ur0mb3s','-5':'ui_marginRight_-5__ur0mb3t','-6':'ui_marginRight_-6__ur0mb3u',auto:'ui_marginRight_auto__ur0mb3v'};\nexport var marginTop = {'0':'ui_marginTop_0__ur0mb3w','1':'ui_marginTop_1__ur0mb3x','2':'ui_marginTop_2__ur0mb3y','3':'ui_marginTop_3__ur0mb3z','4':'ui_marginTop_4__ur0mb40','5':'ui_marginTop_5__ur0mb41','6':'ui_marginTop_6__ur0mb42','-1':'ui_marginTop_-1__ur0mb43','-2':'ui_marginTop_-2__ur0mb44','-3':'ui_marginTop_-3__ur0mb45','-4':'ui_marginTop_-4__ur0mb46','-5':'ui_marginTop_-5__ur0mb47','-6':'ui_marginTop_-6__ur0mb48',auto:'ui_marginTop_auto__ur0mb49'};\nexport var marginY = {'0':'ui_marginY_0__ur0mb1r','1':'ui_marginY_1__ur0mb1s','2':'ui_marginY_2__ur0mb1t','3':'ui_marginY_3__ur0mb1u','4':'ui_marginY_4__ur0mb1v','5':'ui_marginY_5__ur0mb1w','6':'ui_marginY_6__ur0mb1x','-1':'ui_marginY_-1__ur0mb1y','-2':'ui_marginY_-2__ur0mb1z','-3':'ui_marginY_-3__ur0mb20','-4':'ui_marginY_-4__ur0mb21','-5':'ui_marginY_-5__ur0mb22','-6':'ui_marginY_-6__ur0mb23'};\nexport var media = {small:'screen and (min-width: 40em)',medium:'screen and (min-width: 52em)',large:'screen and (min-width: 64em)'};\nexport var navButtonlink = 'ui_navButtonlink__ur0mb56';\nexport var navlink = 'ui_navlink__ur0mb55';\nexport var order = {'0':'ui_order_0__ur0mb2k','1':'ui_order_1__ur0mb2l','2':'ui_order_2__ur0mb2m','3':'ui_order_3__ur0mb2n'};\nexport var padding = {'0':'ui_padding_0__ur0mb11','1':'ui_padding_1__ur0mb12','2':'ui_padding_2__ur0mb13','3':'ui_padding_3__ur0mb14','4':'ui_padding_4__ur0mb15','5':'ui_padding_5__ur0mb16','6':'ui_padding_6__ur0mb17','-1':'ui_padding_-1__ur0mb18','-2':'ui_padding_-2__ur0mb19','-3':'ui_padding_-3__ur0mb1a','-4':'ui_padding_-4__ur0mb1b','-5':'ui_padding_-5__ur0mb1c','-6':'ui_padding_-6__ur0mb1d'};\nexport var paddingY = {'0':'ui_paddingY_0__ur0mb1e','1':'ui_paddingY_1__ur0mb1f','2':'ui_paddingY_2__ur0mb1g','3':'ui_paddingY_3__ur0mb1h','4':'ui_paddingY_4__ur0mb1i','5':'ui_paddingY_5__ur0mb1j','6':'ui_paddingY_6__ur0mb1k','-1':'ui_paddingY_-1__ur0mb1l','-2':'ui_paddingY_-2__ur0mb1m','-3':'ui_paddingY_-3__ur0mb1n','-4':'ui_paddingY_-4__ur0mb1o','-5':'ui_paddingY_-5__ur0mb1p','-6':'ui_paddingY_-6__ur0mb1q'};\nexport var radii = {button:'ui_radii_button__ur0mb2h',large:'ui_radii_large__ur0mb2i',circle:'ui_radii_circle__ur0mb2j'};\nexport var section = 'ui_section__ur0mb2p';\nexport var text = {body:'ui_text_body__ur0mb4p ui_margin0__ur0mb4o',lead:'ui_text_lead__ur0mb4q ui_margin0__ur0mb4o',superHeading:'ui_text_superHeading__ur0mb4r ui_margin0__ur0mb4o',heading:'ui_text_heading__ur0mb4s ui_margin0__ur0mb4o',subhead:'ui_text_subhead__ur0mb4t ui_margin0__ur0mb4o',subheadSmall:'ui_text_subheadSmall__ur0mb4u ui_margin0__ur0mb4o',kicker:'ui_text_kicker__ur0mb4v ui_margin0__ur0mb4o',caps:'ui_text_caps__ur0mb4w ui_margin0__ur0mb4o',stat:'ui_text_stat__ur0mb4x ui_margin0__ur0mb4o',statLabel:'ui_text_statLabel__ur0mb4y ui_margin0__ur0mb4o',small:'ui_text_small__ur0mb4z ui_margin0__ur0mb4o',medium:'ui_text_medium__ur0mb50 ui_margin0__ur0mb4o',mega:'ui_text_mega__ur0mb51 ui_margin0__ur0mb4o',center:'ui_text_center__ur0mb52',bold:'ui_text_bold__ur0mb53'};\nexport var visuallyHidden = 'ui_visuallyHidden__ur0mb5q';\nexport var widths = {full:'ui_widths_full__ur0mbu',half:'ui_widths_half__ur0mbv',quarter:'ui_widths_quarter__ur0mbw',third:'ui_widths_third__ur0mbx',twothirds:'ui_widths_twothirds__ur0mby',fitContent:'ui_widths_fitContent__ur0mbz'};","import \"src/theme.css.ts.vanilla.css!=!../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE42VO2/bMBSF9/wKIlmtgHrYlpSpBZK0QyYPHQNKomwmkuhSlO2k6H/vpWy+ZAWolwQ4H+89l4+jXHAu0Z8bhIKg5A0XfVCQ8n0r+NBVr6/H4Thke5yju7quH76iLlgI2CPOMow9UtKT1EgEyGr8echesJaID03FM/36oVAU1Uwy36wdJDW+l8AkBVlS4jGklOxgCq0AwjiJ0rU/XwMDamY9Mn6ngna0Zmay9Oz5Yrrfk5IGWItZjgLsKqFWSI6S/cmVIi0VOUp9KdZSmaNw5WuJ1qocxZGvLbVGc7SatFtprYaa0aSh9bmFCSYrrdMdiNOVxisDcWrWun0DdWrX+n0HdWrYOm5UZWu55p3csE/a231v1UzXupmqy9HcejMYd/fZ6ma2Pegz6810v6F+cq2b+YR7VlY3E/ZwO2bqr7Uu3fNU+i/KtjvZBx0XLWk0NgCmb69LtbRiQ6upQ46Wc1RPW1bwxryq4xfVXOaUo/UcA1EgiAt+wCV3QT8uPnN0+wx0S7rbBepJp9wIVrv8jpKKdVsTQvg/1rS842YBxNaFX6AX2jV8gZQ+3rbzooZ19MdlAtdeCHEW3q+W19TUVKzAaAaU6o/BEoWF11TPG2a2LIRY0wyVkooNOIVm01MPIdnwLOc3XatwuscRbWfhI6tMVoaQcoCmGu3H61jCnhJwKwyWjVmCzcMdsY4IwY+GgeQLsX0dZ8ZrBgEYJsmkiu8dgjC1L+RMkAORxHqp3DeknRye4dO1/85PL6wzJKRjjK9MW5ScDAphmcygP2ErDLP1gthFNnBK9ph2qq3mBNwbFhSDlE4lprbKJxoitnan3tycOQMlE2VjCUjSTP2Mnx2p+LGf1IFEhT7qi6Q+PeP/d9FjlMUx/rYwkmrlamFy1lJPS9bxU/IUZQ83f/8B/ZTjGmUIAAA=\\\"}!../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/styles.css.ts.vanilla.css!=!../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/styles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyB6b29tSW5VcCB7CiAgMCUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KSB0cmFuc2xhdGVZKDEwcHgpIHRyYW5zbGF0ZVgoLTUwJSk7CiAgICB2aXNpYmlsaXR5OiBoaWRkZW47CiAgICBvcGFjaXR5OiAwOwogIH0KICAxMDAlIHsKICAgIG9wYWNpdHk6IDE7CiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpLCB0cmFuc2xhdGVZKDApIHRyYW5zbGF0ZVgoLTUwJSk7CiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOwogIH0KfQpAa2V5ZnJhbWVzIHpvb21PdXREb3duIHsKICAwJSB7CiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpIHRyYW5zbGF0ZVkoMCkgdHJhbnNsYXRlWCgtNTAlKTsKICAgIG9wYWNpdHk6IDE7CiAgfQogIDEwMCUgewogICAgb3BhY2l0eTogMDsKICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSkgdHJhbnNsYXRlWSgxMHB4KSB0cmFuc2xhdGVYKC01MCUpOwogICAgdmlzaWJpbGl0eTogaGlkZGVuOwogIH0KfQpAa2V5ZnJhbWVzIGZhZGVJbiB7CiAgMCUgewogICAgdmlzaWJpbGl0eTogaGlkZGVuOwogICAgb3BhY2l0eTogMDsKICB9CiAgMTAwJSB7CiAgICBvcGFjaXR5OiAxOwogICAgdmlzaWJpbGl0eTogdmlzaWJsZTsKICB9Cn0KQGtleWZyYW1lcyBmYWRlT3V0IHsKICAwJSB7CiAgICBvcGFjaXR5OiAxOwogIH0KICAxMDAlIHsKICAgIG9wYWNpdHk6IDA7CiAgICB2aXNpYmlsaXR5OiBoaWRkZW47CiAgfQp9CmJvZHkgewogIG1hcmdpbjogMDsKICBmb250LWZhbWlseTogdmFyKC0tZm9udHMtdGV4dF9fd3V3dTlweik7CiAgY29sb3I6IHZhcigtLWNvbG9ycy10ZXh0X193dXd1OXAyKTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvcnMtYmFja2dyb3VuZF9fd3V3dTlwMCk7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKfQoqIHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9\\\"}!../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\n\nexport default function Head({ title, description, image }) {\n  return (\n    <>\n      <meta charSet=\"utf-8\" />\n      <title>{title}</title>\n      {description && (\n        <meta\n          name=\"description\"\n          property=\"og:description\"\n          content={description}\n        />\n      )}\n      <meta property=\"og:title\" content={title} />\n      {image && <meta property=\"og:image\" content={image.url} />}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      {description && <meta name=\"twitter:description\" content={description} />}\n      {image && <meta name=\"twitter:image\" content={image.url} />}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport \"../styles.css\"\nimport { Slice } from \"gatsby\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Slice alias=\"header\" />\n      {children}\n      <Slice alias=\"footer\" />\n    </>\n  )\n}\n\nexport default Layout\n","import { Link as GatsbyLink } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport isAbsoluteURL from \"is-absolute-url\"\nimport * as React from \"react\"\nimport * as styles from \"./ui.css\"\n\nexport const cx = (...args) => args.filter(Boolean).join(\" \")\n\nexport function Base({\n  as: Component = \"div\",\n  cx: _cx = [],\n  className,\n  ...props\n}) {\n  return <Component className={cx(..._cx, className)} {...props} />\n}\n\nexport function Container({ width = \"normal\", ...props }) {\n  return <Base cx={[styles.containers[width]]} {...props} />\n}\n\nexport function Flex({\n  variant,\n  gap = 3,\n  gutter,\n  wrap,\n  responsive,\n  marginY,\n  alignItems,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.flex,\n        variant && styles.flexVariants[variant],\n        responsive && styles.flexVariants.responsive,\n        wrap && styles.flexVariants.wrap,\n        gutter && styles.gutter[gutter],\n        gutter ? styles.flexGap[0] : styles.flexGap[gap],\n        marginY && styles.marginY[marginY],\n        alignItems && styles.flexVariants[alignItems],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Box({\n  width = \"full\",\n  background,\n  padding,\n  paddingY,\n  radius,\n  center = false,\n  order,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.widths[width],\n        background && styles.backgrounds[background],\n        padding && styles.padding[padding],\n        paddingY && styles.paddingY[paddingY],\n        radius && styles.radii[radius],\n        center && styles.box.center,\n        order && styles.order[order],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function FlexList(props) {\n  return <Flex as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function List(props) {\n  return <Base as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function Space({ size = \"auto\", ...props }) {\n  return <Base cx={[styles.margin[size]]} {...props} />\n}\n\nexport function Nudge({ left, right, top, bottom, ...props }) {\n  return (\n    <Base\n      cx={[\n        left && styles.marginLeft[-left],\n        right && styles.marginRight[-right],\n        top && styles.marginTop[-top],\n        bottom && styles.marginBottom[-bottom],\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Section(props) {\n  return <Box as=\"section\" className={styles.section} {...props} />\n}\n\nexport function Text({\n  variant = \"body\",\n  center = false,\n  bold = false,\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.text[variant],\n        center && styles.text.center,\n        bold && styles.text.bold,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function SuperHeading({ ...props }) {\n  return <Text as=\"h1\" variant=\"superHeading\" {...props} />\n}\n\nexport function Heading({ ...props }) {\n  return <Text as=\"h2\" variant=\"heading\" {...props} />\n}\n\nexport function Subhead({ ...props }) {\n  return <Text as=\"h3\" variant=\"subhead\" {...props} />\n}\n\nexport function Kicker({ ...props }) {\n  return <Text variant=\"kicker\" {...props} />\n}\n\nexport function Link({ to, href, ...props }) {\n  const url = href || to || \"\"\n  if (isAbsoluteURL(url)) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a href={url} className={styles.link} {...props} />\n    )\n  }\n  return <GatsbyLink to={url} className={styles.link} {...props} />\n}\n\nexport function NavLink({ ...props }) {\n  return <Base as={Link} cx={[styles.navlink]} {...props} />\n}\n\nexport function NavButtonLink({ ...props }) {\n  return <Base as=\"button\" cx={[styles.navButtonlink]} {...props} />\n}\n\nexport function Button({ variant = \"subprime\", ...props }) {\n  return <Base as={Link} cx={[styles.buttons[variant]]} {...props} />\n}\n\nexport function ButtonList({ links = [], reversed = false, ...props }) {\n  const getVariant = (i) => {\n    if (reversed) {\n      return i === 0 ? \"reversed\" : \"linkReversed\"\n    }\n    return i === 0 ? \"subprime\" : \"link\"\n  }\n  return (\n    <FlexList marginY={4} {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <Button href={link.href} variant={getVariant(i)}>\n              {link.text}\n            </Button>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function CTALink(props) {\n  return <Base as={Link} cx={[styles.ctaLink]} {...props} />\n}\n\nexport function LinkList({ links = [], ...props }) {\n  return (\n    <FlexList {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <CTALink href={link.href}>{link.text}</CTALink>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function Blockquote(props) {\n  return <Base as=\"blockquote\" cx={[styles.blockquote]} {...props} />\n}\n\nexport function Avatar({ alt, image }) {\n  return (\n    <GatsbyImage alt={alt} image={getImage(image)} className={styles.avatar} />\n  )\n}\n\nexport function Logo({ alt, image, size = \"small\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.logos[size]}\n    />\n  )\n}\n\nexport function Icon({ alt, image, size = \"medium\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.icons[size]}\n    />\n  )\n}\n\nexport function IconLink(props) {\n  return <NavLink cx={[styles.iconLink]} {...props} />\n}\n\nexport function InteractiveIcon(props) {\n  return <Base as=\"button\" cx={[styles.interactiveIcon]} {...props} />\n}\n\nexport function VisuallyHidden(props) {\n  return <Base as=\"span\" cx={[styles.visuallyHidden]} {...props} />\n}\n\nexport function BlockLink(props) {\n  return <Link className={styles.blockLink} {...props} />\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Container, Box, Heading } from \"../components/ui\"\nimport SEOHead from \"../components/head\"\n\nexport default function Page(props) {\n  const { page } = props.data\n\n  return (\n    <Layout>\n      <Box paddingY={5}>\n        <Container width=\"narrow\">\n          <Heading as=\"h1\">{page.title}</Heading>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: page.html,\n            }}\n          />\n        </Container>\n      </Box>\n    </Layout>\n  )\n}\nexport const Head = (props) => {\n  const { page } = props.data\n  return <SEOHead {...page} />\n}\nexport const query = graphql`\n  query PageContent($id: String!) {\n    page(id: { eq: $id }) {\n      id\n      title\n      slug\n      description\n      image {\n        id\n        url\n      }\n      html\n    }\n  }\n`\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n"],"names":["s","l","u","d","c","h","g","warn","e","console","p","sortNumeric","t","m","getSizes","f","getSrcSet","map","src","width","join","v","lastIndexOf","a","slice","length","w","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","n","Math","round","y","generateImageSource","filename","format","fit","options","b","pluginName","reporter","S","N","backgroundColor","x","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","filter","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","type","_","images","placeholder","dedupeAndSortDensities","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","createElement","decoding","L","Picture","key","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","Fragment","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","children","G","V","U","removeNewLines","replace","X","GatsbyImage","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","number","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection","React","Head","title","description","charSet","name","property","content","url","Slice","Layout","alias","__renderedByLocation","fileName","lineNumber","columnNumber","endLineNumber","endColumnNumber","Link","GatsbyLink","isAbsoluteURL","styles","cx","args","Base","Component","_cx","props","assign","Container","containers","Flex","variant","gap","gutter","wrap","responsive","marginY","alignItems","flex","flexVariants","flexGap","Box","background","padding","paddingY","radius","center","order","widths","backgrounds","radii","box","FlexList","list","List","Space","margin","Nudge","marginLeft","marginRight","marginTop","marginBottom","Section","section","Text","bold","text","SuperHeading","Heading","Subhead","Kicker","to","href","link","NavLink","navlink","NavButtonLink","navButtonlink","Button","buttons","ButtonList","links","reversed","getVariant","id","CTALink","ctaLink","LinkList","Blockquote","blockquote","Avatar","avatar","Logo","logos","Icon","icons","IconLink","iconLink","InteractiveIcon","interactiveIcon","VisuallyHidden","visuallyHidden","BlockLink","blockLink","SEOHead","Page","page","data","html","query"],"sourceRoot":""}